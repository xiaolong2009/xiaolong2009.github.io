<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>V2GO </title>
    <link>https://xiaolong2009.github.io/tags/http/feed/index.xml</link>
    <language>en-us</language>
    <author>Xiaolong</author>
    <rights>(C) 1</rights>
    <updated>0001-01-01 00:00:00 &#43;0000 UTC</updated>

    
      
        <item>
          <title>cookie&amp;session</title>
          <link>https://xiaolong2009.github.io/2016/05/11/cookiesession/</link>
          <pubDate>Wed, 11 May 2016 11:46:53 CST</pubDate>
          <author>Xiaolong</author>
          <guid>https://xiaolong2009.github.io/2016/05/11/cookiesession/</guid>
          <description>

&lt;blockquote&gt;
&lt;p&gt;因为http是无状态的协议，所以就需要有一套机制来保持用户的状态，比如用户的登录状态。这个机制其实就是借助cookie和session来完成的&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h1 id=&#34;cookie&#34;&gt;cookie&lt;/h1&gt;

&lt;p&gt;Cookie用于存储http请求中的用户认证信息，用户在通过登录认证后，服务器在response header中设置Cookie，用户浏览器自动带Cookie访问该网站
通过在response 的header中添加set-cookie的信息来设置cookie，response中用set-cookie设置了cookie，那下次的request的header中就会带着这个cookie进行请求。cookie是一组key，value值。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;Set-Cookie: &amp;lt;name&amp;gt;=&amp;lt;value&amp;gt;[; &amp;lt;name&amp;gt;=&amp;lt;value&amp;gt;]...
            [; expires=&amp;lt;date&amp;gt;][; domain=&amp;lt;domain_name&amp;gt;]
            [; path=&amp;lt;some_path&amp;gt;][; secure][; httponly]
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;expires Cookie过期时间&lt;/li&gt;
&lt;li&gt;domain Cookie的生效域&lt;/li&gt;
&lt;li&gt;path Cookie的生效路径&lt;/li&gt;
&lt;li&gt;secure 表示cookie只能被发送到http服务器&lt;/li&gt;
&lt;li&gt;httponly 表示cookie不能被客户端脚本获取到&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;不带expires的Cookie表示临时Cookie只在当前会话有效，关闭浏览器Cookie实效&lt;/p&gt;

&lt;h1 id=&#34;session&#34;&gt;session&lt;/h1&gt;

&lt;p&gt;session是保存在服务端的会话控制，一般服务器会发送包含sessionid的临时Cookie给浏览器，服务器根据sessionid获取保存的用户信息，自行维护过期时间等信息&lt;/p&gt;

&lt;p&gt;拿登录请求为例，用户在登录页面输入用户名和密码，程序在后台验证用户的密码正确后，会按照一定的加密算法生成一个字符串，并通过在response的header中添加set-cookie来设置cookie，一般来说这个cookie的key是sessionid（当然名字是可以修改的不一定是sessionid），value就是加密后的字符串，这样在下次请求的header中就带有这样的一条cookie &lt;code&gt;sessionid=evt6iw35306xdzqu2xcdzfm8894h9cik&lt;/code&gt;。程序后台会有一个表来存储session，表中一般会有session_key、 session_data、expire_date等字段。在下次请求时，程序就会拿到evt6iw35306xdzqu2xcdzfm8894h9cik，并查找session_key为evt6iw35306xdzqu2xcdzfm8894h9cik的session_data的值，进而解密出用户的信息，要是表中存在session_key为evt6iw35306xdzqu2xcdzfm8894h9cik的行，证明有这个用户，不存在就证明没有这个用户。
另外session也不一定是存在数据库里，存在memecache或者redis里甚至文件里都是可以的。&lt;/p&gt;
</description>
        </item>
      
    

  </channel>
</rss>
